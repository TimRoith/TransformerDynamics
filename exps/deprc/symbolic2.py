import numpy as np
from pysr import PySRRegressor


co = np.array([ 
        1.15873192e+05,  5.46912620e+04,  1.39741928e+04, -1.13194179e+04,
       -2.52650568e+04, -3.11225153e+04, -3.14659259e+04, -2.82961231e+04,
       -2.31375445e+04, -1.71216247e+04, -1.10584037e+04, -5.49786594e+03,
       -7.82341721e+02,  2.90885862e+03,  5.52155296e+03,  7.09464224e+03,
        7.73313158e+03,  7.58554061e+03,  6.82511979e+03,  5.63437352e+03,
        4.19246872e+03,  2.66517840e+03,  1.19707631e+03, -9.42394030e+01,
       -1.12205675e+03, -1.83270345e+03, -2.20600144e+03, -2.25403621e+03,
       -2.01822069e+03, -1.56461525e+03, -9.77473192e+02, -3.51030513e+02,
        2.20329744e+02,  6.53203744e+02,  8.86914712e+02,  8.94708686e+02,
        6.92520507e+02,  3.42549058e+02, -5.20320100e+01, -3.65402440e+02,
       -4.83702743e+02, -3.54761280e+02, -4.05444191e+01,  2.61881534e+02,
        2.94922329e+02, -2.14727493e+01, -2.74305085e+02,  1.53201899e+02,
       -2.81786781e+01,  3.99737141e+00, -1.28117088e-02])

x = np.linspace(0, 0.9, 100)[:,None]
y = np.polyval(co, x)

#%%
x = np.array([0.0000, 0.0184, 0.0367, 0.0551, 0.0735, 0.0918, 0.1102, 0.1286, 0.1469,
        0.1653, 0.1837, 0.2020, 0.2204, 0.2388, 0.2571, 0.2755, 0.2939, 0.3122,
        0.3306, 0.3490, 0.3673, 0.3857, 0.4041, 0.4224, 0.4408, 0.4592, 0.4776,
        0.4959, 0.5143, 0.5327, 0.5510, 0.5694, 0.5878, 0.6061, 0.6245, 0.6429,
        0.6612, 0.6796, 0.6980, 0.7163, 0.7347, 0.7531, 0.7714, 0.7898, 0.8082,
        0.8265, 0.8449, 0.8633, 0.8816, 0.9000])[:,None]
y = np.array([1.0372e-02, 4.8736e-02, 8.7788e-02, 1.2757e-01, 1.6812e-01, 2.0950e-01,
        2.5175e-01, 2.9493e-01, 3.3911e-01, 3.8436e-01, 4.3074e-01, 4.7834e-01,
        5.2725e-01, 5.7758e-01, 6.2943e-01, 6.8293e-01, 7.3822e-01, 7.9545e-01,
        8.5481e-01, 9.1649e-01, 9.8073e-01, 1.0478e+00, 1.1179e+00, 1.1916e+00,
        1.2691e+00, 1.3509e+00, 1.4377e+00, 1.5301e+00, 1.6289e+00, 1.7351e+00,
        1.8500e+00, 1.9751e+00, 2.1122e+00, 2.2639e+00, 2.4333e+00, 2.6246e+00,
        2.8430e+00, 3.0964e+00, 3.3940e+00, 3.7509e+00, 4.1851e+00, 4.7234e+00,
        5.3974e+00, 6.2552e+00, 7.3982e+00, 8.9184e+00, 1.0955e+01, 1.3985e+01,
        1.8414e+01, 2.5413e+01])[:,None]

#%%
num_eps = 5
num_int_eval = 100

model = PySRRegressor(
    niterations=600,  # < Increase me for better results
    binary_operators=["+", "*", '-', '/','^'],
    constraints={'^':(-1,1)},
    populations=25,
    unary_operators=[
        "exp",
        "sin",
        "cos",
        "tan",
        #"inv(x) = 1/x",
        "abs",
        "cosh",
        "sinh",
        "tanh",
        "atan",
        "asinh",
        "sqrt",
        "log",
        #"acosh",
        "atanh_clip",
        "square",
        "cube",
        # ^ Custom operator (julia syntax)
    ],
    warm_start=False,
    maxsize=10,
    extra_sympy_mappings={"inv": lambda x: 1 / x, 
                          "oadd": lambda x: 1+x},
    # ^ Define operator for SymPy as well
)

#%%
model.fit(x,y)

#%%
import matplotlib.pyplot as plt
plt.plot(x,y)